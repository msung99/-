#include <iostream>
using namespace std;

// 원판이 1개일 때 원판을 내가 원하는 곳으로 옮길 수 있다
// 원판이 k개일때 옮길 수 있으면 원판이 k+1개일 때도 옮길 수 있다
// => 어떻게 k+1개를 옮길 수 있는가?
// 1.n-1 개의 원판은 기둥 1에서 기둥 2로 옮긴다.
// 2. n번 원판을 기둥 1에서 기둥 2로 옮긴다
// 3. n-1개의 원판을 기둥 2에서 기둥 3으로 옮긴다.
// 따라서 원판이 n-1개 일때 옮길 수 있으면 원판이 n개일 때도 옮길 수 있다.

// 원판 k개를 옮기기 위해 A번 이동이 필요헀다고 하자.
// 그러면 원판 k+1 개를 옮길 때는 k개의 원판을 빈 곳으로 옮길 때 A번, k+1 번 원판을 옮길 때 1번, 
// k개의 원판을 다시 빈 곳에서 목적지로 옮길 때 A번이 필요하니 2A+1 이동이 필요하다.
// 더 나아가 초항이 1이기 때문에 이 수열의 일반항은 2^k-1 이 된다.

// 함수의 정의 : 원판 n개를 a 기둥에서 b 기둥으로 옮기는 방법으로 출력하는 함수
void func1(int a, int b, int n) {
	if (n == 1){ // base condition : n = 1일때  
		cout << a << ' ' << b << ' ' << '\n'; // 원판 하나를 기둥 a에서 b로 옮긴다.
        return;
    }
	// 재귀식 - n개의 원판을 기둥 a에서 b로 옮기는 과정
	func1(a, 6-a-b, n - 1); // 1, n-1개의 원판을 기둥 a 에서 6-a-b 로 옮긴다
	cout << a << ' ' << b << ' '; // 2. n번의 원판을 기둥 a 에서 b 로 옮긴다
	func1(6-a-b,b,n-1); // 3. 기둥 6-a-b 으로 옮겨놨던 n-1개의 원판을 기둥 b로 옮긴다
}

int main(void)
{
	int k;
	cin >> k;
	cout << (1 << k) - 1 << '\n'; //  << : 비트 연산자. 1을 비트 기준으로 k칸 밀라는 의미. 즉 (1<<k) 는 2^k 이 된다.
	func1(1, 3, k); 
}